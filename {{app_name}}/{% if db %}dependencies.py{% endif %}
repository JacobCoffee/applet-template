"""Dependencies for {{app_name}}."""
from __future__ import annotations

from typing import TYPE_CHECKING

from sqlalchemy import select

from ..{{app_name}}.services import {{app_name}}Service
from structlog import get_logger

if TYPE_CHECKING:
    from collections.abc import AsyncGenerator

    from sqlalchemy.ext.asyncio import AsyncSession

__all__ = ("provides_{{app_name}}_service",)

logger = get_logger()


async def provides_{{app_name}}_service(db_session: AsyncSession) -> AsyncGenerator[{{app_name}}Service, None]:
    """Construct SomeModel-based repository and service objects for the request.

    Args:
        db_session (AsyncSession): SQLAlchemy AsyncSession

    Yields:
        {{app_name}}Service: SomeModel-based service
    """
    async with {{app_name}}Service.new(session=db_session, statement=select(SomeModel).order_by(SomeModel.id)) as service:
        yield service
